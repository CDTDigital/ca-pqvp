---
  basePath: "/api/v1"
  consumes: 
    - "application/json"
  definitions: 
    AddToOrder: 
      additionalProperties: false
      properties: 
        productId: 
          description: "ProductId of product associated with this orderItem"
          type: "integer"
        quantity: 
          description: "Quantity of item ordered"
          type: "integer"
      required: 
        - "quantity"
        - "productId"
      type: "object"
    Category: 
      additionalProperties: false
      properties: 
        categoryId: 
          description: "The identifier of the object"
          type: "integer"
        name: 
          description: "Category name"
          type: "string"
      required: 
        - "categoryId"
      type: "object"
    CategoryCollection: 
      items: 
        $ref: "#/definitions/Category"
      type: "array"
    CategoryStats: 
      items: 
        properties: 
          title: 
            type: "string"
          value: 
            type: "number"
      type: "array"
    Contract: 
      additionalProperties: false
      properties: 
        contractId: 
          description: "The identifier of the object"
          type: "integer"
        contractNumber: 
          description: "Internal unique reference code for this contract"
          type: "string"
        contractorName: 
          description: "Name of the contractor"
          type: "string"
        effectiveDate: 
          description: "Contract effective date"
          type: "string"
      required: 
        - "contractId"
        - "contractorName"
        - "contractNumber"
        - "effectiveDate"
      type: "object"
    ContractCollection: 
      items: 
        $ref: "#/definitions/Contract"
      type: "array"
    Empty: 
      additionalProperties: false
      properties: {}
      type: "object"
    Image: 
      additionalProperties: false
      properties: 
        defaultImage: 
          description: "Indicates that this image is the default for the productId"
          type: "boolean"
        imageURL: 
          description: "Location of the image"
          type: "string"
      required: 
        - "imageURL"
      type: "object"
    ImageCollection: 
      items: 
        $ref: "#/definitions/Image"
      type: "array"
    Login: 
      additionalProperties: false
      properties: 
        password: 
          description: "The password of the authenticated user (not returned in response)"
          type: "string"
        token: 
          description: "JWT token containing claims for exp, roles, and permissions (not part of request, only response)"
          type: "string"
        userName: 
          description: "The userName of the authenticated user"
          type: "string"
      required: 
        - "userName"
      type: "object"
    Order: 
      additionalProperties: false
      properties: 
        dateCreated: 
          description: "Timestamp that the order was created"
          type: "number"
        orderItems: 
          description: "Array of order items: if status=CART then this array tracks items as they are added, removed or updated."
          items: 
            $ref: "#/definitions/OrderItem"
          type: "array"
        status: 
          description: "Current status: starts at CART; when ordered, PROCESSING; when all items shipped, COMPLETE. If deleted/cancelled: CLOSED"
          enum: 
            - "CART"
            - "PROCESSING"
            - "COMPLETE"
            - "CLOSED"
          type: "string"
        totalCost: 
          description: "Total cost of all orderItems SUM(unitCost * quantity)"
          type: "number"
      required: 
        - "dateCreated"
        - "status"
        - "totalCost"
        - "orderItems"
      type: "object"
    OrderCollection: 
      items: 
        $ref: "#/definitions/Order"
      type: "array"
    OrderItem: 
      additionalProperties: false
      properties: 
        orderItemId: 
          description: "The identifier of the object"
          type: "integer"
        productId: 
          description: "ProductId of product associated with this orderItem"
          type: "integer"
        quantity: 
          description: "Quantity of item ordered"
          type: "integer"
        status: 
          description: "Current status: starts at CART; when ordered, PROCESSING; when shipped, SHIPPED"
          enum: 
            - "CART"
            - "PROCESSING"
            - "SHIPPED"
          type: "string"
        subTotal: 
          description: "Total cost for this item: quantity * unitPrice"
          type: "number"
        tracking: 
          description: "Tracking information for shipped order items"
          type: "string"
      required: 
        - "quantity"
        - "subTotal"
        - "status"
        - "productId"
      type: "object"
    OrderItemCollection: 
      items: 
        $ref: "#/definitions/OrderItem"
      type: "array"
    Product: 
      additionalProperties: false
      properties: 
        amazonNumOfStars: 
          description: "Rating of the product based on amazon's rating"
          type: "string"
        amazonProductId: 
          description: "Corresponding Amazon product Id"
          type: "string"
        category: 
          description: "Product category"
          enum: 
            - "Accessories"
            - "Components"
            - "Desktop"
            - "Laptops"
            - "Peripheral"
            - "Services"
            - "Software"
          type: "string"
        contractCategory: 
          description: "Category of the contract"
          type: "string"
        contractNum: 
          description: "Contract Number"
          type: "string"
        contractSubCategory: 
          description: "Sub Category of the contract"
          type: "string"
        contractor: 
          description: "Contractor Information"
          type: "string"
        contractorId: 
          description: "Contractor id "
          type: "integer"
        dateAdded: 
          description: "Date that the product was/is first made available"
          type: "integer"
        defaultImageId: 
          description: "ImageId of the default image for this product"
          type: "integer"
        description: 
          description: "Product description"
          maxLength: 4000
          type: "string"
        discount: 
          description: "Discount code for the product"
          type: "number"
        images: 
          description: "Array of ImageIds of all product images (including the default image)"
          items: 
            type: "integer"
          type: "array"
        manufacturer: 
          description: "Manufacturer of the product"
          type: "string"
        manufacturerPartNumber: 
          description: "Manufacturer's part number"
          type: "string"
        msrp: 
          description: "Market selling Retail Price"
          type: "number"
        name: 
          description: "Product name"
          type: "string"
        popular: 
          description: "Indicates this product should be featured"
          type: "boolean"
        productId: 
          description: "The identifier of the object"
          type: "integer"
        quantityInUnitOfMeasure: 
          description: "QUantity of number of items of a product"
          type: "integer"
        skuNum: 
          description: "stock keeping unit number"
          type: "string"
        unitOfMeasure: 
          description: "Number of items of a product"
          type: "string"
        unitPrice: 
          description: "Product unit price"
          type: "number"
      required: 
        - "name"
        - "category"
        - "unitPrice"
        - "dateAdded"
        - "popular"
        - "description"
        - "images"
      type: "object"
    ProductCollection: 
      items: 
        $ref: "#/definitions/Product"
      type: "array"
    User: 
      additionalProperties: false
      properties: 
        firstName: 
          description: "The users first name"
          type: "string"
        lastName: 
          description: "The users last name"
          type: "string"
        userName: 
          description: "The users login user name"
          minLength: 8
          type: "string"
      required: 
        - "firstName"
        - "lastName"
        - "userName"
      type: "object"
    UserCollection: 
      items: 
        $ref: "#/definitions/User"
      type: "array"
  host: "www.calproc.website"
  info: 
    title: "KPMG-Agile CalProc Services"
    version: "1"
  paths: 
    /categories: 
      get: 
        description: "Get a list of category\n"
        parameters: 
          - 
            default: 1
            description: "The page number of the collection to return"
            in: "query"
            name: "page"
            required: false
            type: "number"
          - 
            default: 20
            description: "The number of items to display per page"
            in: "query"
            name: "pageSize"
            required: false
            type: "number"
          - 
            default: false
            description: "Sort results in descending order rather than ascending"
            in: "query"
            name: "sortDescending"
            required: false
            type: "boolean"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/CategoryCollection"
          401: 
            description: "Authentication token is invalid or has expired.  Client should display a message to the user and return them user to the login screen."
          403: 
            description: "Authentication token is valid, but client does not have access to perform this action."
    /categories/stats: 
      get: 
        description: "Get a list of stat\n"
        parameters: 
          - 
            default: 1
            description: "The page number of the collection to return"
            in: "query"
            name: "page"
            required: false
            type: "number"
          - 
            default: 20
            description: "The number of items to display per page"
            in: "query"
            name: "pageSize"
            required: false
            type: "number"
          - 
            default: false
            description: "Sort results in descending order rather than ascending"
            in: "query"
            name: "sortDescending"
            required: false
            type: "boolean"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/CategoryStats"
          401: 
            description: "Authentication token is invalid or has expired.  Client should display a message to the user and return them user to the login screen."
          403: 
            description: "Authentication token is valid, but client does not have access to perform this action."
    /contracts: 
      get: 
        description: "Get a list of contract\n"
        parameters: 
          - 
            default: 1
            description: "The page number of the collection to return"
            in: "query"
            name: "page"
            required: false
            type: "number"
          - 
            default: 20
            description: "The number of items to display per page"
            in: "query"
            name: "pageSize"
            required: false
            type: "number"
          - 
            default: false
            description: "Sort results in descending order rather than ascending"
            in: "query"
            name: "sortDescending"
            required: false
            type: "boolean"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/ContractCollection"
          401: 
            description: "Authentication token is invalid or has expired.  Client should display a message to the user and return them user to the login screen."
          403: 
            description: "Authentication token is valid, but client does not have access to perform this action."
    /images: 
      get: 
        description: "Get a list of image\n"
        parameters: 
          - 
            default: 1
            description: "The page number of the collection to return"
            in: "query"
            name: "page"
            required: false
            type: "number"
          - 
            default: 20
            description: "The number of items to display per page"
            in: "query"
            name: "pageSize"
            required: false
            type: "number"
          - 
            default: false
            description: "Sort results in descending order rather than ascending"
            in: "query"
            name: "sortDescending"
            required: false
            type: "boolean"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/ImageCollection"
          401: 
            description: "Authentication token is invalid or has expired.  Client should display a message to the user and return them user to the login screen."
          403: 
            description: "Authentication token is valid, but client does not have access to perform this action."
      post: 
        description: "Add a new image to the collection\n"
        parameters: 
          - 
            in: "body"
            name: "body"
            required: true
            schema: 
              $ref: "#/definitions/Image"
        responses: 
          201: 
            description: "Created"
            schema: 
              $ref: "#/definitions/Image"
          401: 
            description: "Authentication token is invalid or has expired.  Client should display a message to the user and return them user to the login screen."
          403: 
            description: "Authentication token is valid, but client does not have access to perform this action."
          409: 
            description: "Unable to process request to do conflict in state of object. Any specific details included in body.\n"
    /images/{imageId}: 
      delete: 
        description: "Deletes a specific image\n"
        parameters: 
          - 
            in: "path"
            name: "imageId"
            required: true
            type: "string"
        responses: 
          204: 
            description: "Successfully deleted the image"
          401: 
            description: "Authentication token is invalid or has expired.  Client should display a message to the user and return them user to the login screen."
          403: 
            description: "Authentication token is valid, but client does not have access to perform this action."
      get: 
        description: "Get a specific image\n"
        parameters: 
          - 
            in: "path"
            name: "imageId"
            required: true
            type: "string"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/Image"
          401: 
            description: "Authentication token is invalid or has expired.  Client should display a message to the user and return them user to the login screen."
          403: 
            description: "Authentication token is valid, but client does not have access to perform this action."
      put: 
        description: "Update a specific image\n"
        parameters: 
          - 
            in: "path"
            name: "imageId"
            required: true
            type: "string"
          - 
            in: "body"
            name: "body"
            required: true
            schema: 
              $ref: "#/definitions/Image"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/Image"
          401: 
            description: "Authentication token is invalid or has expired.  Client should display a message to the user and return them user to the login screen."
          403: 
            description: "Authentication token is valid, but client does not have access to perform this action."
          409: 
            description: "Unable to process request to do conflict in state of object. Any specific details included in body.\n"
    /login: 
      delete: 
        description: "Clears current session and logs user out of the application.\n"
        responses: 
          204: 
            description: "Successfully sent clear-cookie header"
            schema: 
              $ref: "#/definitions/Empty"
          401: 
            description: "Authentication token is invalid or has expired.  Client should display a message to the user and return them user to the login screen."
          403: 
            description: "Authentication token is valid, but client does not have access to perform this action."
      post: 
        description: "Authenticate the user via username & password\n"
        parameters: 
          - 
            in: "body"
            name: "body"
            required: true
            schema: 
              $ref: "#/definitions/Login"
        responses: 
          201: 
            description: "Created"
            schema: 
              $ref: "#/definitions/Login"
          401: 
            description: "Invalid username or password\n"
            schema: 
              $ref: "#/definitions/Empty"
      put: 
        description: "Returns an updated token with an extended expiration.\nThis will be invoked by the client when the user has been actively using the client but not in ways that have resulted in a other service calls.  It allows the client to prevent the user from being timed out unnecessarily.\n"
        responses: 
          201: 
            description: "Created"
            schema: 
              $ref: "#/definitions/Login"
          401: 
            description: "Authentication token is invalid or has expired.  Client should display a message to the user and return them user to the login screen."
          403: 
            description: "Authentication token is valid, but client does not have access to perform this action."
    /order-items: 
      get: 
        description: "Get a list of order-item\n"
        parameters: 
          - 
            default: 1
            description: "The page number of the collection to return"
            in: "query"
            name: "page"
            required: false
            type: "number"
          - 
            default: 20
            description: "The number of items to display per page"
            in: "query"
            name: "pageSize"
            required: false
            type: "number"
          - 
            default: false
            description: "Sort results in descending order rather than ascending"
            in: "query"
            name: "sortDescending"
            required: false
            type: "boolean"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/OrderItemCollection"
    /order-items/{orderItemId}: 
      get: 
        description: "Get a specific order-item\n"
        parameters: 
          - 
            in: "path"
            name: "orderItemId"
            required: true
            type: "string"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/OrderItem"
          401: 
            description: "Authentication token is invalid or has expired.  Client should display a message to the user and return them user to the login screen."
          403: 
            description: "Authentication token is valid, but client does not have access to perform this action."
    /orders: 
      get: 
        description: "Get a list of order\n"
        parameters: 
          - 
            default: 1
            description: "The page number of the collection to return"
            in: "query"
            name: "page"
            required: false
            type: "number"
          - 
            default: 20
            description: "The number of items to display per page"
            in: "query"
            name: "pageSize"
            required: false
            type: "number"
          - 
            default: false
            description: "Sort results in descending order rather than ascending"
            in: "query"
            name: "sortDescending"
            required: false
            type: "boolean"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/OrderCollection"
          401: 
            description: "Authentication token is invalid or has expired.  Client should display a message to the user and return them user to the login screen."
          403: 
            description: "Authentication token is valid, but client does not have access to perform this action."
    /orders/current: 
      get: 
        description: "Get a specific current\n"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/Order"
          401: 
            description: "Authentication token is invalid or has expired.  Client should display a message to the user and return them user to the login screen."
          403: 
            description: "Authentication token is valid, but client does not have access to perform this action."
    /orders/current/add-item: 
      post: 
        description: "Add a specific cartItem\n"
        parameters: 
          - 
            in: "body"
            name: "body"
            required: true
            schema: 
              $ref: "#/definitions/AddToOrder"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/Order"
          401: 
            description: "Authentication token is invalid or has expired.  Client should display a message to the user and return them user to the login screen."
          403: 
            description: "Authentication token is valid, but client does not have access to perform this action."
          409: 
            description: "Unable to process request to do conflict in state of object. Any specific details included in body.\n"
    /orders/current/submit-order: 
      post: 
        description: "Order confirmation\n"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/Empty"
          401: 
            description: "Authentication token is invalid or has expired.  Client should display a message to the user and return them user to the login screen."
          403: 
            description: "Authentication token is valid, but client does not have access to perform this action."
          409: 
            description: "Unable to process request to do conflict in state of object. Any specific details included in body.\n"
    /orders/{orderId}: 
      get: 
        description: "Get a specific order\n"
        parameters: 
          - 
            in: "path"
            name: "orderId"
            required: true
            type: "string"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/Order"
          401: 
            description: "Authentication token is invalid or has expired.  Client should display a message to the user and return them user to the login screen."
          403: 
            description: "Authentication token is valid, but client does not have access to perform this action."
    /products: 
      get: 
        description: "Get a list of product\n"
        parameters: 
          - 
            default: 1
            description: "The page number of the collection to return"
            in: "query"
            name: "page"
            required: false
            type: "number"
          - 
            default: 20
            description: "The number of items to display per page"
            in: "query"
            name: "pageSize"
            required: false
            type: "number"
          - 
            default: false
            description: "Sort results in descending order rather than ascending"
            in: "query"
            name: "sortDescending"
            required: false
            type: "boolean"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/ProductCollection"
          401: 
            description: "Authentication token is invalid or has expired.  Client should display a message to the user and return them user to the login screen."
          403: 
            description: "Authentication token is valid, but client does not have access to perform this action."
      post: 
        description: "Add a new product to the collection\n"
        parameters: 
          - 
            in: "body"
            name: "body"
            required: true
            schema: 
              $ref: "#/definitions/Product"
        responses: 
          201: 
            description: "Created"
            schema: 
              $ref: "#/definitions/Product"
          401: 
            description: "Authentication token is invalid or has expired.  Client should display a message to the user and return them user to the login screen."
          403: 
            description: "Authentication token is valid, but client does not have access to perform this action."
          409: 
            description: "Unable to process request to do conflict in state of object. Any specific details included in body.\n"
    /products/{productId}: 
      delete: 
        description: "Deletes a specific product\n"
        parameters: 
          - 
            in: "path"
            name: "productId"
            required: true
            type: "string"
        responses: 
          204: 
            description: "Successfully deleted the product"
          401: 
            description: "Authentication token is invalid or has expired.  Client should display a message to the user and return them user to the login screen."
          403: 
            description: "Authentication token is valid, but client does not have access to perform this action."
      get: 
        description: "Get a specific product\n"
        parameters: 
          - 
            in: "path"
            name: "productId"
            required: true
            type: "string"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/Product"
          401: 
            description: "Authentication token is invalid or has expired.  Client should display a message to the user and return them user to the login screen."
          403: 
            description: "Authentication token is valid, but client does not have access to perform this action."
      put: 
        description: "Update a specific product\n"
        parameters: 
          - 
            in: "path"
            name: "productId"
            required: true
            type: "string"
          - 
            in: "body"
            name: "body"
            required: true
            schema: 
              $ref: "#/definitions/Product"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/Product"
          401: 
            description: "Authentication token is invalid or has expired.  Client should display a message to the user and return them user to the login screen."
          403: 
            description: "Authentication token is valid, but client does not have access to perform this action."
          409: 
            description: "Unable to process request to do conflict in state of object. Any specific details included in body.\n"
    /users: 
      get: 
        description: "Get a list of user\n"
        parameters: 
          - 
            default: 1
            description: "The page number of the collection to return"
            in: "query"
            name: "page"
            required: false
            type: "number"
          - 
            default: 20
            description: "The number of items to display per page"
            in: "query"
            name: "pageSize"
            required: false
            type: "number"
          - 
            default: false
            description: "Sort results in descending order rather than ascending"
            in: "query"
            name: "sortDescending"
            required: false
            type: "boolean"
          - 
            description: "A string of terms to query for users by"
            in: "query"
            name: "terms"
            required: false
            type: "string"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/UserCollection"
          401: 
            description: "Authentication token is invalid or has expired.  Client should display a message to the user and return them user to the login screen."
          403: 
            description: "Authentication token is valid, but client does not have access to perform this action."
    /users/current: 
      get: 
        description: "Get a specific current\n"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/User"
          401: 
            description: "Authentication token is invalid or has expired.  Client should display a message to the user and return them user to the login screen."
          403: 
            description: "Authentication token is valid, but client does not have access to perform this action."
    /users/{userId}: 
      get: 
        description: "Get a specific user\n"
        parameters: 
          - 
            in: "path"
            name: "userId"
            required: true
            type: "string"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/User"
          401: 
            description: "Authentication token is invalid or has expired.  Client should display a message to the user and return them user to the login screen."
          403: 
            description: "Authentication token is valid, but client does not have access to perform this action."
  produces: 
    - "application/json"
  schemes: 
    - "http"
  securityDefinitions: {}
  swagger: "2.0"

